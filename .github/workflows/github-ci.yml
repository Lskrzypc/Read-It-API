name: ReadIt API CI/CD

on:
  pull_request:
    branches: [ "main", "dev" ]
    types: [opened, synchronize]
  push:
    branches:
      - main
      - dev

permissions:
  contents: read
  packages: write

jobs:
  check_service:
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
    - name: Setup node environment
      uses: actions/setup-node@v2
      with:
        node-version: '22'

    - name: Setup environment variables
      run: |
          echo "MONGO_DSN=${{ secrets.MONGO_DSN }}" >> $GITHUB_ENV
          echo "MONGO_DATABASE_NAME=${{ secrets.MONGO_DATABASE_NAME }}" >> $GITHUB_ENV
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> $GITHUB_ENV
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> $GITHUB_ENV
          echo "DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKER_HUB_PASSWORD=${{ secrets.DOCKER_HUB_PASSWORD }}" >> $GITHUB_ENV
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
        
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  

    - name: Install dependencies
      run: npm install

    - name: Check service (build, dependencies check, lint and audit)
      run: npm run check

    # - name: Start service
    #   run: npm run start &
    
    # - name: Run tests
    #   run: npm run test

  build-docker-image:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Extract Version
        id: extract_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/readitapi:latest
            ${{ secrets.DOCKER_USERNAME }}/readitapi:${{ env.VERSION }}

  # deploy_staging:
  #   if: github.ref == 'refs/heads/dev'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Ssh connection to VPS
  #       uses: webfactory/ssh-agent@v2
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #     - name: Deploy to staging
  #       run: |
  #         ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' < .github/scripts/deploy.sh

  # deploy_production:
  #   if: github.ref == 'refs/heads/main'
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Ssh connection to VPS
  #       uses: webfactory/ssh-agent@v2
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  #     - name: Deploy to production
  #       run: |
  #         ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' < .github/scripts/deploy.sh

  


  

  
